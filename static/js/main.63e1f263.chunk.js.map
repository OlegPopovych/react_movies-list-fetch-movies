{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils/prepareMovie.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onSetMovie","useState","setTitle","setMovie","error","setError","isLoading","setIsLoading","handleResetForm","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","data","Plot","Title","Poster","imdbID","prepareMovie","finally","htmlFor","value","onChange","target","type","id","placeholder","cn","disabled","onClick","find","elem","App","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63e1f263.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nconst DEFAULT_IMG = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const prepareMovie = (data: MovieData): Movie => {\n  const {\n    Plot,\n    Title,\n    Poster,\n    imdbID,\n  } = data;\n\n  const newsMovie: Movie = {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A' ? DEFAULT_IMG : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n\n  return newsMovie;\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { prepareMovie } from '../../utils/prepareMovie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onSetMovie(newMovie: Movie): void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ onSetMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onFindMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setError(false);\n    setIsLoading(true);\n\n    getMovie(title)\n      .then(data => {\n        if ('Error' in data) {\n          setError(true);\n          setMovie(null);\n        } else {\n          setMovie(prepareMovie(data));\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const onTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (error) {\n      setError(false);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleResetForm = () => {\n    setTitle('');\n    setMovie(null);\n  };\n\n  const onAddMovie = () => {\n    const existMovie = movies.find(\n      (elem: Movie): boolean => elem.imdbId === movie?.imdbId,\n    );\n\n    if (existMovie) {\n      handleResetForm();\n\n      return;\n    }\n\n    if (movie) {\n      onSetMovie(movie);\n      handleResetForm();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={onTitleChange}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                { 'is-danger': error },\n              )}\n            />\n          </div>\n          {error\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!title}\n              className={cn(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={() => onAddMovie()}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n        </div>\n      </form>\n\n      {movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n\n            <MovieCard movie={movie} />\n          </div>\n        )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a2e3614e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const onSetMovie = (movie: Movie) => {\n    setMovie(prev => [...prev, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onSetMovie={onSetMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}